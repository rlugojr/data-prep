#
#  ============================================================================
#
#  Copyright (C) 2006-2016 Talend Inc. - www.talend.com
#
#  This source code is available under agreement available at
#  https://github.com/Talend/data-prep/blob/master/LICENSE
#
#  You should have received a copy of the agreement
#  along with this program; if not, write to Talend SA
#  9 rue Pages 92150 Suresnes, France
#
#  ============================================================================
#

spring.profiles.active=standalone
# Web server port (0 = random).
server.port=9090

# Service documentation
service.documentation.name=Talend Data Preparation - Preparation Service (PS)
service.documentation.description=This service exposes operations to transform data.
service.paths=preparations,version

# PREPARATION STORE
#    Values: in-memory, file
#    Example: preparation.store.type=file
preparation.store.type=file
preparation.store.file.location=/tmp/dataprep/store/preparations/content
preparation.store.remove.hours=24

# FOLDER DATA STORE
#    values: file
folder.store=file
folder.store.file.location=/tmp/dataprep/store/preparations/folders

# Lock on preparation (mongo or none) delay in seconds
lock.preparation.store.type=none
lock.preparation.delay=600

# Enable global lock
hazelcast.enabled=true

dataset.records.limit=30000

# Needed to sort preparations on datasets names
dataset.service.url=http://localhost:8080

############# LOGGING #############
## Path of the log file
#logging.file=data/logs/dataprep-preparation.log
## Level output pattern, uncomment to add the MDC user after level
#logging.pattern.level=%5p [user %X{user}]
## Pattern used for file logging, uncomment to override Spring default
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p --- [%t] %-40.40logger{39} : %m%n%wEx
## Pattern used for console logging, uncomment to override Spring default
#logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx
## Configure ansi coloration in console output. Options are: always | never | detect
spring.output.ansi.enabled=always
###################################
